import numpy as np



#Setando os dados que serao usados
Samples = 100
dt = 0.1
tempo = np.arange(0,Samples*dt,dt)
VelReal = 10 #m/s


#Equacao do movimento
Xinicial = 0 #m
Xreal = Xinicial + VelReal*tempo


#Imagina-se que o trem tem seu estado inicial em 0 m e como velocidade 5 m/s

Xk_prev = np.array([[0],[0.5*VelReal]])


#inicializando o estado atual do trem

Xk = []

#Os estados do sistema sao Velocidade e Aceleracao, portanto x = [Posicao Velocidade]'
#A equacao de movimento seria Xk = A*Xk_prev + Ruido
#Xk(n) = Xk(n-1) + Vk(n-1)*dt
#sendo V estimado e nao medido
# A representa a dinamica do sistema, ou seja a propria equacao do movimento
A = np.array([[1,dt],[0,1]])

#Sendo P a variancia entre os estados, onde sera pesado a relacao entre a medida
#e a estimativa

sigma_model = 1

P = np.array([[sigma_model**2,0],[0,sigma_model**2]])


#Sendo Q a covariancia do ruido do preocesso. O que representa a incerteza do modelo
#Para esse problema sera assumido um modelo perfeito, sem aceleracao
#Qualquer aceleracao medida sera considerada ruido.

Q = np.array([[0, 0],[0,0]])


#Sendo R o ruido de covariancia, podendo variar entre medicoes

sigma_meas = 1 # 1m/s

R = sigma_meas**2

a